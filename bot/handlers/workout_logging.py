from datetime import datetime
from aiogram import Router, F
from aiogram.types import Message
from config.db_settings import main_database
from models.db_utils import get_database_connection, close_database_connection
from models.db_queries import log_workout
from utils.logging import setup_logger

router = Router()
logger = setup_logger()

# MET-–∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
MET_VALUES = {
    "–±–µ–≥": 9.8,
    "–π–æ–≥–∞": 2.5,
    "—Å–∏–ª–æ–≤–∞—è": 6.0,
    "–≤–µ–ª–æ—Å–∏–ø–µ–¥": 8.0
}

@router.message(F.text.startswith("/log_workout"))
async def handle_log_workout(message: Message):
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /log_workout")
    try:
        user_id = message.from_user.id
        args = message.text.split()
        if len(args) < 3:
            await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–≤ –º–∏–Ω—É—Ç–∞—Ö). –ù–∞–ø—Ä–∏–º–µ—Ä: /log_workout –±–µ–≥ 30")
            return

        workout_type = args[1].lower()
        if workout_type not in MET_VALUES and workout_type != "–∫–∞–ª–æ—Ä–∏–∏":
            await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏. –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: –±–µ–≥, –π–æ–≥–∞, —Å–∏–ª–æ–≤–∞—è, –≤–µ–ª–æ—Å–∏–ø–µ–¥.")
            return

        conn, cursor = get_database_connection(main_database)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª "–∫–∞–ª–æ—Ä–∏–∏", –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        if workout_type == "–∫–∞–ª–æ—Ä–∏–∏":
            calories_burned = int(args[2])
            log_workout(cursor, user_id, None, None, calories_burned)
            conn.commit()
            await message.reply(f"üèãÔ∏è‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–∞! –°–æ–∂–∂–µ–Ω–æ –∫–∞–ª–æ—Ä–∏–π: {calories_burned} –∫–∫–∞–ª.")
            close_database_connection(conn)
            return

        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–∏–ø —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏, —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–∞–ª–æ—Ä–∏–∏
        duration = int(args[2])
        if duration <= 0:
            await message.reply("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
            return

        cursor.execute("SELECT weight FROM users WHERE id = ?", (user_id,))
        user_data = cursor.fetchone()
        if not user_data:
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /set_profile.")
            close_database_connection(conn)
            return

        weight = user_data[0]
        met = MET_VALUES[workout_type]
        calories_burned = weight * met * (duration / 60)  # –†–∞—Å—Å—á—ë—Ç –∫–∞–ª–æ—Ä–∏–π

        log_workout(cursor, user_id, workout_type, duration, calories_burned)
        conn.commit()

        # –†–∞—Å—Å—á—ë—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≤–æ–¥—ã
        additional_water = duration * 10

        await message.reply(
            f"üèãÔ∏è‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–∞!\n"
            f"–¢–∏–ø: {workout_type.capitalize()}\n"
            f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} –º–∏–Ω—É—Ç\n"
            f"–°–æ–∂–∂–µ–Ω–æ –∫–∞–ª–æ—Ä–∏–π: {calories_burned:.1f} –∫–∫–∞–ª\n\n"
            f"üíß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–ø–∏—Ç—å {additional_water} –º–ª –≤–æ–¥—ã –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏."
        )
        close_database_connection(conn)
    except ValueError:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –∫–∞–ª–æ—Ä–∏–π.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏.")
